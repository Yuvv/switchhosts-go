name: Build and Test
on: [push, pull_request]
jobs:
  test:
    name: test
    strategy:
      matrix:
        go-version: [1.12.x, 1.13.x]
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v1
      with:
        go-version: ${{ matrix.go-version }}

    - name: setup env
      run: |
        echo "::set-env name=GOPATH::$GITHUB_WORKSPACE"
        echo "::add-path::$GITHUB_WORKSPACE/bin"
        export GOPATH=$GITHUB_WORKSPACE
        echo $GOPATH
        echo $GITHUB_WORKSPACE
        if [ ! -d "$GITHUB_WORKSPACE/bin" ]; then
            mkdir -p "$GITHUB_WORKSPACE/bin"
        fi
        if [ ! -d "$GITHUB_WORKSPACE/src" ]; then
            mkdir -p "$GITHUB_WORKSPACE/src"
        fi
        if [ ! -d "$GITHUB_WORKSPACE/pkg" ]; then
            mkdir -p "$GITHUB_WORKSPACE/pkg"
        fi
      shell: bash

    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        path: src/github.com/${{ github.repository }}

    - name: Get dependencies
      run: |
        cd "src/github.com/${{ github.repository }}"
        pwd
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi
      shell: bash

    - name: Test
      run: |
        cd "src/github.com/${{ github.repository }}"
        pwd
        go test ./...

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: setup env
      run: |
        echo "::set-env name=GOPATH::$GITHUB_WORKSPACE"
        echo "::add-path::$GITHUB_WORKSPACE/bin"
        export GOPATH=$GITHUB_WORKSPACE
        echo $GOPATH
        echo $GITHUB_WORKSPACE
        if [ ! -d "$GITHUB_WORKSPACE/bin" ]; then
            mkdir -p "$GITHUB_WORKSPACE/bin"
        fi
        if [ ! -d "$GITHUB_WORKSPACE/src" ]; then
            mkdir -p "$GITHUB_WORKSPACE/src"
        fi
        if [ ! -d "$GITHUB_WORKSPACE/pkg" ]; then
            mkdir -p "$GITHUB_WORKSPACE/pkg"
        fi
      shell: bash

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        path: src/github.com/${{ github.repository }}

    - name: Get dependencies
      run: |
        cd "src/github.com/${{ github.repository }}"
        pwd
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi
      shell: bash

    - name: Build
      run: |
        cd "src/github.com/${{ github.repository }}"
        pwd
        go build -v .
